"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jv2fhy*n4&512-y=a=wtoevu7^5=_lpc&hd=%(wda__h%!+(hq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'climber.dev.maptnh.net', '192.168.11.2']


# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'unfold',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'whitenoise',
    'django_htmx',
    # 'easyaudit', # Conditionally included below
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_framework',
    'drf_yasg',
    'tailwind',
    'theme', # for django-tailwind 
    'climber'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'easyaudit.middleware.easyaudit.EasyAuditMiddleware', # Conditionally included below
    'django_htmx.middleware.HtmxMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

# Conditionally add django-easy-audit
if not os.environ.get('TESTING'):
    INSTALLED_APPS.append('easyaudit')
    # Ensure 'easyaudit.middleware.easyaudit.EasyAuditMiddleware' is correctly placed in MIDDLEWARE
    # It's often placed after AuthenticationMiddleware and before other app-specific middleware.
    # For simplicity, we'll insert it before 'django_htmx.middleware.HtmxMiddleware'
    # Find index of 'django_htmx.middleware.HtmxMiddleware' to insert before it
    try:
        htmx_index = MIDDLEWARE.index('django_htmx.middleware.HtmxMiddleware')
        MIDDLEWARE.insert(htmx_index, 'easyaudit.middleware.easyaudit.EasyAuditMiddleware')
    except ValueError:
        # If 'django_htmx.middleware.HtmxMiddleware' is not found, append it.
        # This might happen if MIDDLEWARE structure changes.
        MIDDLEWARE.append('easyaudit.middleware.easyaudit.EasyAuditMiddleware')
else:
    # If TESTING is true, ensure the commented-out line for easyaudit middleware is truly removed or remains commented
    # This block is more for clarity, as the default state is already without the middleware if not added above.
    pass

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Ljubljana'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TAILWIND_APP_NAME = 'theme'

UNFOLD = {
    "SITE_TITLE": "ProjectClimb Admin",
    "SITE_HEADER": "ProjectClimb Admin",
}


DJANGO_EASY_AUDIT_REMOTE_ADDR_HEADER = 'HTTP_X_FORWARDED_FOR'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}

#django-channels config
ASGI_APPLICATION = 'app.asgi.application'

REDIS_HOST =  env('REDIS_HOST')

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(REDIS_HOST, 6379)],
        },
    },
}

